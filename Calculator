<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator</title>
    <style>
        /* Reset */
        * {
            border: none; /* Clear default borders */
            font-family: 'Open Sans', Arial; /* Set font */
            margin: 0; /* Clear default margins */
            padding: 0; /* Clear default paddings */
        }

        /* Center the calculator */
        .center {
            background-color: #fff;
            border-radius: 100%; /* Circular shape */
            height: 600px;
            margin: auto; /* Center horizontally */
            width: 600px;
        }

        /* Header styling */
        h1 {
            color: #495678;
            font-size: 40px;
            margin-top: 20px;
            padding-top: 15px;
            display: block;
            text-align: center;
            text-decoration: none;
        }

        /* Form styling */
        form {
            background-color: #495678;
            box-shadow: 4px 4px #3d4a65;
            margin: 20px auto;
            padding: 40px 0 30px 40px;
            width: 315px;
        }

        /* Button styling */
        .btn {
            cursor: pointer; /* Hand pointer */
            font-size: 20px;
            height: 45px;
            margin: 5px 0 7px 10px;
            outline: none; /* Clear default outline */
            width: 45px;
        }

        .btn:first-child {
            margin: 5px 0 5px 10px;
        }

        /* Styles for the display, buttons, and form */
        .btn, #display, form {
            border-radius: 25px;
        }

        /* Display styling */
        #display {
            background-color: #98d1dc;
            box-shadow: inset 6px 6px 0px #3facc0;
            color: #dededc;
            font-size: 20px;
            height: 47px;
            margin-left: 10px;
            padding-right: 10px;
            text-align: right;
            width: 265px;
        }

        /* Button styling based on their type */
        .number {
            background-color: #72778b;
            box-shadow: 0 5px #5f6680;
            color: #dededc;
        }

        .number:active {
            box-shadow: 0 2px #5f6680;
            transform: translateY(2px);
        }

        .operator {
            background-color: #dededc;
            box-shadow: 0 5px #bebebe;
            color: #72778b; 
        }

        .operator:active {
            box-shadow: 0 2px #bebebe;
            transform: translateY(2px);
        }
        .zero {          
            width: 165px;
            background-color: #72778b;
            box-shadow: 0 5px #5f6680;
            color: #dededc;
        }
        .zero:active {
            box-shadow: 0 2px #5f6680;
            transform: translateY(2px);
        }
        .other {
            background-color: #e3844c;
            box-shadow: 0 5px #e76a3d;
            color: #dededc;
        }

        .other:active {
            box-shadow: 0 2px #e76a3d;
            transform: translateY(2px);
        }
    </style>
</head>
<body>
    <div class="center">
        <h1>Calculator</h1>
        <form name="calculator">
            <input type="text" id="display">
            <br>
            <input type="button" id="clear" class="btn other" value="C">
            <input type="button" class="btn operator" value="(" onclick="get(this.value);">
            <input type="button" class="btn operator" value=")" onclick="get(this.value);">
            <input type="button" class="btn operator" value="^" onclick="get(this.value);">
            <input type="button" class="btn operator" value="+" onclick="get(this.value);">
            <br>
			<input type="button" class="btn number" value="7" onclick="get(this.value);">
			<input type="button" class="btn number" value="8" onclick="get(this.value);">
			<input type="button" class="btn number" value="9" onclick="get(this.value);">
			<input type="button" class="btn operator" value="sin" onclick="get(this.value);">
			<input type="button" class="btn operator" value="-" onclick="get(this.value);">
			
			<br>
			<input type="button" class="btn number" value="4" onclick="get(this.value);">
			<input type="button" class="btn number" value="5" onclick="get(this.value);">
			<input type="button" class="btn number" value="6" onclick="get(this.value);">
			<input type="button" class="btn operator" value="cos" onclick="get(this.value);">
			<input type="button" class="btn operator" value="*" onclick="get(this.value);">
			
			<br>
			<input type="button" class="btn number" value="1" onclick="get(this.value);">
			<input type="button" class="btn number" value="2" onclick="get(this.value);">
			<input type="button" class="btn number" value="3" onclick="get(this.value);">
			<input type="button" class="btn operator" value="tan" onclick="get(this.value);">
			<input type="button" class="btn operator" value="/" onclick="get(this.value);">		

			<br>
			<input type="button" class="btn zero" value="0" onclick="get(this.value);">
			<input type="button" class="btn operator" value="." onclick="get(this.value);">		
            <input type="button" class="btn other" value="=" onclick="calculates();">
        </form>
    </div>

    <script>
        // Clear the display
        document.getElementById("clear").addEventListener("click", function() {
            document.getElementById("display").value = "";
        });

        // Append value to the display
        function get(value) {
            document.getElementById("display").value += value;
        }

        // Evaluate the result
        function calculates() {
            var displayValue = document.getElementById("display").value;
            displayValue = processTrigonometry(displayValue);
            try {
                 var result = eval(displayValue);
                 document.getElementById("display").value = result;
                } catch (error) {
                    document.getElementById("display").value = "Error";
                 }
            }
        // Process trigonometric functions
        function processTrigonometry(value) {
            value = value.replace(/(\d*)sin(\d+)/g, function(match, coefficient, angle) {
            coefficient = coefficient || '1';  // Default coefficient to 1 if it's absent
            return roundNumber(coefficient * Math.sin(toRadians(Number(angle))), 5);
            });

            value = value.replace(/(\d*)cos(\d+)/g, function(match, coefficient, angle) {
            coefficient = coefficient || '1';  // Default coefficient to 1 if it's absent
            return roundNumber(coefficient * Math.cos(toRadians(Number(angle))), 5);
            });

            value = value.replace(/(\d*)tan(\d+)/g, function(match, coefficient, angle) {
            coefficient = coefficient || '1';  // Default coefficient to 1 if it's absent
            return roundNumber(coefficient * Math.tan(toRadians(Number(angle))), 5);
            });

            value = value.replace(/(\d+)\^(\d+)/g, function(match, base, exponent) {
            return Math.pow(Number(base), Number(exponent));
            });
        return value;
}


        // Round number to a certain decimal place
        function roundNumber(num, scale) {
            if(!("" + num).includes("e")) {
                return +(Math.round(num + "e+" + scale) + "e-" + scale);
            } else {
                var arr = ("" + num).split("e");
                var sig = ""
                if(+arr[1] + scale > 0) {
                    sig = "+";
                }
                return +(Math.round(+arr[0] + "e" + sig + (+arr[1] + scale)) + "e-" + scale);
            }
        }

        // Convert degrees to radians
        function toRadians(degrees) {
            return degrees * (Math.PI / 180);
        }
    </script>
</body>
</html>
